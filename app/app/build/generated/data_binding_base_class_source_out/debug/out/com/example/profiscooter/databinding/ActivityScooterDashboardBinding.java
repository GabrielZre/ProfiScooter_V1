// Generated by view binder compiler. Do not edit!
package com.example.profiscooter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.profiscooter.R;
import com.github.anastr.speedviewlib.PointerSpeedometer;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityScooterDashboardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final PointerSpeedometer pointerSpeedometer;

  @NonNull
  public final RatingBar ratingBar;

  @NonNull
  public final ImageButton resetButton;

  @NonNull
  public final ImageButton saveButton;

  @NonNull
  public final ImageView startBatteryMeasurement;

  @NonNull
  public final ImageButton startStopButton;

  @NonNull
  public final TextView textViewAvgSpeed;

  @NonNull
  public final TextView textViewBatteryDistance;

  @NonNull
  public final TextView textViewBatteryPercentage;

  @NonNull
  public final TextView textViewTotalDistance;

  @NonNull
  public final TextView timerText;

  private ActivityScooterDashboardBinding(@NonNull ConstraintLayout rootView,
      @NonNull Guideline guideline, @NonNull ImageView imageView,
      @NonNull PointerSpeedometer pointerSpeedometer, @NonNull RatingBar ratingBar,
      @NonNull ImageButton resetButton, @NonNull ImageButton saveButton,
      @NonNull ImageView startBatteryMeasurement, @NonNull ImageButton startStopButton,
      @NonNull TextView textViewAvgSpeed, @NonNull TextView textViewBatteryDistance,
      @NonNull TextView textViewBatteryPercentage, @NonNull TextView textViewTotalDistance,
      @NonNull TextView timerText) {
    this.rootView = rootView;
    this.guideline = guideline;
    this.imageView = imageView;
    this.pointerSpeedometer = pointerSpeedometer;
    this.ratingBar = ratingBar;
    this.resetButton = resetButton;
    this.saveButton = saveButton;
    this.startBatteryMeasurement = startBatteryMeasurement;
    this.startStopButton = startStopButton;
    this.textViewAvgSpeed = textViewAvgSpeed;
    this.textViewBatteryDistance = textViewBatteryDistance;
    this.textViewBatteryPercentage = textViewBatteryPercentage;
    this.textViewTotalDistance = textViewTotalDistance;
    this.timerText = timerText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityScooterDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityScooterDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_scooter_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityScooterDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.pointerSpeedometer;
      PointerSpeedometer pointerSpeedometer = ViewBindings.findChildViewById(rootView, id);
      if (pointerSpeedometer == null) {
        break missingId;
      }

      id = R.id.ratingBar;
      RatingBar ratingBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar == null) {
        break missingId;
      }

      id = R.id.resetButton;
      ImageButton resetButton = ViewBindings.findChildViewById(rootView, id);
      if (resetButton == null) {
        break missingId;
      }

      id = R.id.saveButton;
      ImageButton saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.startBatteryMeasurement;
      ImageView startBatteryMeasurement = ViewBindings.findChildViewById(rootView, id);
      if (startBatteryMeasurement == null) {
        break missingId;
      }

      id = R.id.startStopButton;
      ImageButton startStopButton = ViewBindings.findChildViewById(rootView, id);
      if (startStopButton == null) {
        break missingId;
      }

      id = R.id.textViewAvgSpeed;
      TextView textViewAvgSpeed = ViewBindings.findChildViewById(rootView, id);
      if (textViewAvgSpeed == null) {
        break missingId;
      }

      id = R.id.textViewBatteryDistance;
      TextView textViewBatteryDistance = ViewBindings.findChildViewById(rootView, id);
      if (textViewBatteryDistance == null) {
        break missingId;
      }

      id = R.id.textViewBatteryPercentage;
      TextView textViewBatteryPercentage = ViewBindings.findChildViewById(rootView, id);
      if (textViewBatteryPercentage == null) {
        break missingId;
      }

      id = R.id.textViewTotalDistance;
      TextView textViewTotalDistance = ViewBindings.findChildViewById(rootView, id);
      if (textViewTotalDistance == null) {
        break missingId;
      }

      id = R.id.timerText;
      TextView timerText = ViewBindings.findChildViewById(rootView, id);
      if (timerText == null) {
        break missingId;
      }

      return new ActivityScooterDashboardBinding((ConstraintLayout) rootView, guideline, imageView,
          pointerSpeedometer, ratingBar, resetButton, saveButton, startBatteryMeasurement,
          startStopButton, textViewAvgSpeed, textViewBatteryDistance, textViewBatteryPercentage,
          textViewTotalDistance, timerText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
